package com.demo.jetpackcomposebasic.presentation.componentsimport androidx.compose.material.BottomNavigationimport androidx.compose.material.BottomNavigationItemimport androidx.compose.material.Iconimport androidx.compose.material.Textimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.unit.dpimport androidx.navigation.NavGraph.Companion.findStartDestinationimport androidx.navigation.NavHostControllerimport androidx.navigation.compose.currentBackStackEntryAsStateimport com.demo.jetpackcomposebasic.navigation.Destination@Composablefun BottomNavigationBar(    navController: NavHostController,    items: List<Destination>) {    val currentRoute = currentRoute(navController = navController)    BottomNavigation(        elevation = 4.dp,        backgroundColor = Color.Blue,        contentColor = Color.White    ) {        items.forEach { screen ->            BottomNavigationItem(                icon = { Icon(imageVector = screen.icon, contentDescription = screen.title) },                label = { Text(text = screen.title) },                selected = currentRoute == screen.route,                onClick = {                    navController.navigate(screen.route) {                        popUpTo(navController.graph.findStartDestination().id) {                            saveState = true //Reestablece la pila de navegaci칩n para que no crezca                        }                        launchSingleTop = true //Si el usuario pulsa varias veces al mismo bot칩n no crear치 una pila m치s extensa                    }                },                alwaysShowLabel = false            )        }    }}@Composableprivate fun currentRoute(navController: NavHostController): String? {    val navBackStackEntry by navController.currentBackStackEntryAsState()    return navBackStackEntry?.destination?.route}